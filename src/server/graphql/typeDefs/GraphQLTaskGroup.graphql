type TaskGroup {
  id: ID!
  owner: User!
  title: String!
  description: String
  done: Boolean
  project: Project
  tasks: [Task]
}

type RemoveTaskGroupPayload {
  removedTaskGroupId: ID
}

type MoveTaskToTaskGroupPayload {
  task: Task
  sourceTaskGroup: TaskGroup
  targetTaskGroup: TaskGroup
}

type AddTaskGroupToProjectPayload {
  taskGroup: TaskGroup
  project: Project
}

type Query {
  taskGroups(
    projectId: ID
    limit: ListLimit
    offset: ListOffset
    orderBy: ListOrder
  ): [TaskGroup]
}

type Mutation {
  createTaskGroup(
    title: String
    description: String
    done: Boolean
    projectId: ID
  ): TaskGroup
  updateTaskGroup(
    taskGroupId: ID!
    title: String
    description: String
    done: Boolean
    projectId: ID
  ): TaskGroup
  removeTaskGroup(taskGroupId: ID!): RemoveTaskGroupPayload
  moveTaskToTaskGroup(taskId: ID!, taskGroupId: ID!): MoveTaskToTaskGroupPayload
  addTaskGroupToProject(
    taskGroupId: ID!
    projectId: ID!
  ): AddTaskGroupToProjectPayload
}
