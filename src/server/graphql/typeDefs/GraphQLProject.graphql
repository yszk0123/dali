enum ProjectVisibility {
  PRIVATE
  MEMBER
  PUBLIC
}

type Project {
  id: ID!
  name: String!
  description: String
  owner: User!
  visibility: ProjectVisibility
  members: [Member]
  taskGroups: [TaskGroup]
}

type RemoveProjectPayload {
  removedProjectId: ID!
}

enum ProjectOrderField {
  NAME
  CREATED_AT
  UPDATED_AT
}

input ProjectOrder {
  field: ProjectOrderField!
  direction: OrderDirection!
}

type Query {
  projects(
    limit: ListLimit
    offset: ListOffset
    orderBy: ProjectOrder
  ): [Project]
}

type Mutation {
  createProject(name: String!): Project
  updateProject(projectId: ID!, name: String!): Project
  removeProject(projectId: ID!): RemoveProjectPayload
}
