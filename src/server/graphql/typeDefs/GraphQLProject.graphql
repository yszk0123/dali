enum ProjectVisibility {
  PRIVATE
  MEMBER
  PUBLIC
}

type Project {
  id: ID!
  title: String!
  description: String
  done: Boolean!
  owner: User!
  group: Group
  visibility: ProjectVisibility!
  members: [Member]
  phases(
    projectId: ID
    done: Boolean
    limit: ListLimit
    offset: ListOffset
    orderBy: PhaseOrder
  ): [Phase]
}

type RemoveProjectPayload {
  removedProjectId: ID!
}

enum ProjectOrderField {
  TITLE
  CREATED_AT
  UPDATED_AT
}

input ProjectOrder {
  field: ProjectOrderField!
  direction: OrderDirection!
}

type Query {
  projects(
    groupId: ID
    done: Boolean
    limit: ListLimit
    offset: ListOffset
    orderBy: ProjectOrder
  ): [Project]
}

type Mutation {
  createProject(title: String!, done: Boolean, groupId: ID): Project
  updateProject(
    projectId: ID!
    title: String
    done: Boolean
    groupId: ID
  ): Project
  removeProject(projectId: ID!): RemoveProjectPayload
  addPhaseToProject(phaseId: ID!, projectId: ID!): Project
  setGroupToProject(groupId: ID!, projectId: ID!): Project
}
