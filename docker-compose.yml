version: "3"
services:
  dali-app:
    container_name: dali-app
    image: yszk0123/dali-app
    command: yarn start:with-migrate
    env_file:
      - .env
      - app.env
    expose:
      - 80
    depends_on:
      - dali-database
    networks:
      dali-app-network:
      dali-proxy-network:

  dali-database:
    container_name: dali-database
    image: postgres:9-alpine
    env_file: .env
    ports:
      - 5432
    volumes:
      - volume-dali-database:/var/lib/postgresql/data:cached
    networks:
      dali-app-network:

  dali-proxy-gen:
    container_name: dali-proxy-gen
    image: jwilder/docker-gen
    command: -notify-sighup dali-proxy-nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    restart: unless-stopped
    volumes:
      - ${NGINX_FILES_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH}/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen: "true"
    depends_on:
      - dali-proxy-nginx
    networks:
      dali-proxy-network:

  dali-proxy-nginx:
    container_name: dali-proxy-nginx
    image: nginx:1.13-alpine
    restart: unless-stopped
    volumes:
      - ${NGINX_FILES_PATH}/conf.d:/etc/nginx/conf.d
      - ${NGINX_FILES_PATH}/vhost.d:/etc/nginx/vhost.d
      - ${NGINX_FILES_PATH}/html:/usr/share/nginx/html
      - ${NGINX_FILES_PATH}/certs:/etc/nginx/certs:ro
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    networks:
      dali-proxy-network:

volumes:
  volume-dali-database:

networks:
  dali-app-network:
  dali-proxy-network:
